// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
Texture3D<float4> dataSet;
RWTexture3D<float> densityTexture;
SamplerState _LinearClampSampler;

float invVoxelDim;
float3 wsChunkPosLL;
float3 wsChunkDim;
[numthreads(33,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	float3 sampleCoord = float3(id.xyz) + (wsChunkPosLL*32);
	sampleCoord.x = sampleCoord.x / 256;
	sampleCoord.y = sampleCoord.y / 256;
	sampleCoord.z = sampleCoord.z / 128;
	float density = dataSet.SampleLevel(_LinearClampSampler, sampleCoord, 0).a;

	uint3 writeCoord = id.xyz;
	writeCoord.y = 32 - writeCoord.y;
	densityTexture[writeCoord.xyz] = density;

}
